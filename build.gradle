plugins {
  id 'de.gliderpilot.semantic-release' version '1.3.1'
  id 'de.ruv.gradle.cloudlift.node' version '9.0.0'
}

apply from: 'gradle/gitflow.config.gradle'
// this has to be kept in build.gradle, don't put into an included file
semanticRelease {
  repo {
    ghToken = System.getenv('GITHUB_TOKEN') ?: ''
    useGhEnterprise System.getenv('GITHUB_URL') ?: ''
  }
}

task test(type: NpxTask) {
  dependsOn npmInstall
  inputs.files('package.json', 'package-lock.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
  inputs.dir('src')
  inputs.dir(fileTree("node_modules").exclude(".cache"))
  outputs.dir('coverage')
  outputs.dir('build/tests-reports')

  command = 'ng'
  args = ['test', '--codeCoverage=true', '--watch=false']
}

task lint(type: NpxTask) {
  dependsOn npmInstall
  inputs.files('package.json', 'package-lock.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
  inputs.dir('src')
  inputs.dir(fileTree("node_modules").exclude(".cache"))
  outputs.upToDateWhen { true }

  command = 'ng'
  args = ['lint']
}

project.afterEvaluate {
  def dockerBuildTask = project.tasks.getByName("cloudliftDockerBuild");
  dockerBuildTask.inputs.files('Dockerfile')
  dockerBuildTask.inputs.dir('dist')
  dockerBuildTask.inputs.dir('docker')

  def buildTask = project.tasks.getByName("npm_run_build");
  buildTask.inputs.files('package.json', 'package-lock.json', 'angular.json', 'tsconfig.json', 'tsconfig.app.json')
  buildTask.inputs.dir('src')
  buildTask.inputs.dir(fileTree("node_modules").exclude(".cache"))
  buildTask.outputs.dir('dist')
}

cloudlift {
  node {
    docker {
      dockerfile = project.file('./Dockerfile')
    }
    sonarqube {
      properties {
        property 'sonar.exclusions', "**/coverage/**,**/*.css,**/*.scss,**/*.text.ts,**/*env.js,**/*polyfills.ts"
        property 'sonar.typescript.lcov.reportPaths', 'coverage/lcov.info'
        property 'sonar.eslint.eslintconfigpath', 'tslint.json'
      }
    }
  }
}
